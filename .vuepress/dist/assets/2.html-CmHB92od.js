import{_ as l,r as o,o as i,c,a,w as p,d as n,b as t,e}from"./app-CgvB4e-R.js";const u={},r=e(`<h2 id="_1-变量" tabindex="-1"><a class="header-anchor" href="#_1-变量"><span>1. 变量</span></a></h2><p>无论什么编程语言，都需要处理数据，处理数据就需要使用变量来保存数据。变量就像一个个小容器，用来“盛装”程序中的数据。</p><p><strong>python有6种数据类型：</strong> 数字、字符串、列表、字典、元组、集合。<strong>数字类型又分为4小类：</strong> 整数、浮点数、复数、布尔类型。</p><p><img src="https://bucket-linxc.oss-cn-guangzhou.aliyuncs.com/images/image-20240501144815296.png" alt="image-20240501144815296"></p><p><strong>变量的定义方式：</strong></p><p>变量名称 = 变量的值</p><p>（“=”是赋值符号，意思是把右边的值赋值给左边变量）</p><p><strong>demo案例：</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="line">a<span class="token operator">=</span><span class="token number">222</span></span>
<span class="line">b<span class="token operator">=</span><span class="token number">3.21</span></span>
<span class="line">c<span class="token operator">=</span><span class="token string">&quot;python你好！&quot;</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>执行结果：</strong></p><p><img src="https://bucket-linxc.oss-cn-guangzhou.aliyuncs.com/images/image-20240501150631076.png" alt="image-20240501150631076"></p><p>变量的数据是可以改变的，我们重新赋值就可以；</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="line">a <span class="token operator">=</span> <span class="token number">222</span></span>
<span class="line">b <span class="token operator">=</span> <span class="token number">3.21</span></span>
<span class="line">c <span class="token operator">=</span> <span class="token string">&quot;python你好！&quot;</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span></span>
<span class="line">a <span class="token operator">=</span> <span class="token number">45454</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),d=t("h2",{id:"_2-注释",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#_2-注释"},[t("span",null,"2. 注释")])],-1),k=t("p",null,"用来对代码进行解释说明的文字，提高程序可读性。",-1),m=e(`<ul><li><strong>单行注释</strong></li></ul><p>使用井号开始，跟在“#”号后面知道这一行结束为止的代码都将被解释器忽略</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="line"><span class="token comment"># 定义变量a 赋值222</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>多行注释</li></ul><p>使用三个单引号或三个双引号将注释的内容括起来</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="line"><span class="token comment"># 定义变量a 赋值222</span></span>
<span class="line">a <span class="token operator">=</span> <span class="token number">222</span></span>
<span class="line">b <span class="token operator">=</span> <span class="token number">3.21</span></span>
<span class="line">c <span class="token operator">=</span> <span class="token string">&quot;python你好！&quot;</span></span>
<span class="line"><span class="token triple-quoted-string string">&quot;&quot;&quot;    </span>
<span class="line">输出 a b c    </span>
<span class="line">- 重新给a赋值并输出</span>
<span class="line">&quot;&quot;&quot;</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span></span>
<span class="line">a <span class="token operator">=</span> <span class="token number">45454</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-数据类型" tabindex="-1"><a class="header-anchor" href="#_3-数据类型"><span>3. 数据类型</span></a></h2>`,7),g=e(`<p>用<strong>type()</strong> 方法可以查看变量的类型。</p><p><strong>案例代码：</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="line"><span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">数据类型测试Demo</span>
<span class="line">用type()方法可以查看变量的类型</span>
<span class="line">Python是弱类型语言，变量的类型也是可以改变的。</span>
<span class="line">&quot;&quot;&quot;</span></span>
<span class="line"><span class="token comment"># 定义变量a 赋值222</span></span>
<span class="line">a <span class="token operator">=</span> <span class="token number">222</span></span>
<span class="line"><span class="token comment"># 定义变量b 赋值3.14</span></span>
<span class="line">b <span class="token operator">=</span> <span class="token number">3.14</span></span>
<span class="line"><span class="token comment"># 定义变量c 赋值&quot;Python知识分享网&quot;</span></span>
<span class="line">c <span class="token operator">=</span> <span class="token string">&quot;Python知识分享网&quot;</span></span>
<span class="line"><span class="token comment"># 打印变量类型</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;a=&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;b=&quot;</span><span class="token punctuation">,</span> b<span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;c=&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment"># 改变变量a的类型为字符串</span></span>
<span class="line">a <span class="token operator">=</span> <span class="token string">&quot;字符串类型&quot;</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;a=&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment"># 变量可以是中文，但是不推荐</span></span>
<span class="line">中国<span class="token operator">=</span><span class="token string">&quot;fdfd&quot;</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>中国<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>执行结果：</strong></p><p><img src="https://bucket-linxc.oss-cn-guangzhou.aliyuncs.com/images/image-20240501151438927.png" alt="image-20240501151438927"></p><h2 id="_4-变量的命名规则" tabindex="-1"><a class="header-anchor" href="#_4-变量的命名规则"><span>4. 变量的命名规则</span></a></h2>`,6),v=e(`<p><strong>Python关键字</strong></p><p><img src="https://bucket-linxc.oss-cn-guangzhou.aliyuncs.com/images/image-20240501151954721.png" alt="image-20240501151954721"></p><h2 id="_5-运算符" tabindex="-1"><a class="header-anchor" href="#_5-运算符"><span>5. 运算符</span></a></h2><h3 id="赋值运算符" tabindex="-1"><a class="header-anchor" href="#赋值运算符"><span>赋值运算符</span></a></h3><p>Python使用“=”作为赋值运算符。通常，使用赋值运算符将表达式的值赋给另一个变量。</p><h3 id="算术运算符" tabindex="-1"><a class="header-anchor" href="#算术运算符"><span>算术运算符</span></a></h3><p>Python支持所有的基本算术运算符，这些算术运算符用于执行基本的数学运算，如加、减、乘、除和求余等。下面是7个基本的算术运算符。</p><p>以下，假设变量a为10，变量b为21：</p><p><img src="https://bucket-linxc.oss-cn-guangzhou.aliyuncs.com/images/image-20240501152235580.png" alt="image-20240501152235580"></p><p><strong>案例代码：</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="line"><span class="token comment"># 定义变量a值为10</span></span>
<span class="line">a <span class="token operator">=</span> <span class="token number">10</span><span class="token comment"># 定义变量b值为21</span></span>
<span class="line">b <span class="token operator">=</span> <span class="token number">21</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;a+b=&quot;</span><span class="token punctuation">,</span> a <span class="token operator">+</span> b<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;a-b=&quot;</span><span class="token punctuation">,</span> a <span class="token operator">-</span> b<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;a*b=&quot;</span><span class="token punctuation">,</span> a <span class="token operator">*</span> b<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;b/a=&quot;</span><span class="token punctuation">,</span> b <span class="token operator">/</span> a<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;a**b=&quot;</span><span class="token punctuation">,</span> a <span class="token operator">**</span> b<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;b//a=&quot;</span><span class="token punctuation">,</span> b <span class="token operator">//</span> a<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;b%a=&quot;</span><span class="token punctuation">,</span> b <span class="token operator">%</span> a<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>执行结果：</strong></p><p><img src="https://bucket-linxc.oss-cn-guangzhou.aliyuncs.com/images/image-20240501152336903.png" alt="image-20240501152336903"></p><h3 id="扩展后的赋值运算符" tabindex="-1"><a class="header-anchor" href="#扩展后的赋值运算符"><span>扩展后的赋值运算符</span></a></h3><p>以下，假设变量a为10，变量c为21：</p><p><img src="https://bucket-linxc.oss-cn-guangzhou.aliyuncs.com/images/image-20240501152434151.png" alt="image-20240501152434151"></p><p><strong>案例代码：</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="line">a <span class="token operator">=</span> <span class="token number">10</span></span>
<span class="line">c <span class="token operator">=</span> <span class="token number">21</span></span>
<span class="line">c <span class="token operator">+=</span> a</span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;c+=a c=&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span></span>
<span class="line">c <span class="token operator">-=</span> a</span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;c-=a c=&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span></span>
<span class="line">c <span class="token operator">*=</span> a</span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;c*=a c=&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span></span>
<span class="line">c <span class="token operator">/=</span> a</span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;c/=a c=&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>执行结果：</strong></p><p><img src="https://bucket-linxc.oss-cn-guangzhou.aliyuncs.com/images/image-20240501152610389.png" alt="image-20240501152610389"></p><h2 id="_6-字符串" tabindex="-1"><a class="header-anchor" href="#_6-字符串"><span>6. 字符串</span></a></h2><h3 id="字符串定义和转义字符" tabindex="-1"><a class="header-anchor" href="#字符串定义和转义字符"><span>字符串定义和转义字符</span></a></h3><p>字符串的意思就是“一串字符”，比如&quot;python,牛逼&quot;是一个字符串，&quot;Python知识分享网&quot;也是一个字 符串。Python要求字符串必须使用引号括起来，使用单引号也行，使用双引号也行——只要两边的引号 能配对即可。</p><p><strong>案例：</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="line">str1 <span class="token operator">=</span> <span class="token string">&quot;python 牛逼&quot;</span></span>
<span class="line">str2 <span class="token operator">=</span> <span class="token string">&#39;I love you!&#39;</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>执行结果：</strong></p><p><img src="https://bucket-linxc.oss-cn-guangzhou.aliyuncs.com/images/image-20240502135338518.png" alt="image-20240502135338518"></p><p>假如我们定义的字符串里面 含有单引号或者双引号，对于这种情况，我们有两种解决方案； （1）使用不同的引号将字符串括起来。 （2）通过使用 \\ 对引号进行转义。</p><p><strong>案例：</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="line">str3 <span class="token operator">=</span> <span class="token string">&quot;I&#39;m a coder&quot;</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>str3<span class="token punctuation">)</span></span>
<span class="line">str4 <span class="token operator">=</span> <span class="token string">&#39;&quot;孤注一掷&quot;，真好看！&#39;</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>str4<span class="token punctuation">)</span></span>
<span class="line">str5 <span class="token operator">=</span> <span class="token string">&#39;I\\&#39;m a coder&#39;</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>str5<span class="token punctuation">)</span></span>
<span class="line">str6 <span class="token operator">=</span> <span class="token string">&quot;\\&quot;孤注一掷\\&quot;，真好看！&quot;</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>str6<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://bucket-linxc.oss-cn-guangzhou.aliyuncs.com/images/image-20240502135623479.png" alt="image-20240502135623479"></p><h3 id="长字符串的定义" tabindex="-1"><a class="header-anchor" href="#长字符串的定义"><span>长字符串的定义</span></a></h3><p>前面介绍Python多行注释时提到使用三个引号(单引号、双引号都行)来包含多行注释内容，其实这是长 字符串写法，只是由于在长字符串中可以放置任何内容，包括放置单引号、双引号都可以，如果所定义 的长字符串没有赋值给任何变量，那么这个字符串就相当于被解释器忽略了，也就相当于注释掉了。</p><p><strong>案例：</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="line"><span class="token comment"># 长字符串的定义</span></span>
<span class="line">str8 <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">《春晓》</span>
<span class="line">春眠不觉晓，</span>
<span class="line">处处闻啼鸟。</span>
<span class="line">夜来风雨声，</span>
<span class="line">花落知多少。</span>
<span class="line">&quot;&quot;&quot;</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>str8<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>执行结果：</strong></p><p><img src="https://bucket-linxc.oss-cn-guangzhou.aliyuncs.com/images/image-20240502140235339.png" alt="image-20240502140235339"></p><h3 id="字符串拼接" tabindex="-1"><a class="header-anchor" href="#字符串拼接"><span>字符串拼接</span></a></h3><p>在Python中，使用加号 ( + )作为字符串的拼接运算符；</p><p><strong>案例：</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="line">name <span class="token operator">=</span> <span class="token string">&quot;张三&quot;</span></span>
<span class="line">site <span class="token operator">=</span> <span class="token string">&quot;法外狂徒网站&quot;</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;姓名：&quot;</span><span class="token operator">+</span>name<span class="token operator">+</span><span class="token string">&quot;，网站：&quot;</span><span class="token operator">+</span>site<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,41),b=e(`<img src="https://bucket-linxc.oss-cn-guangzhou.aliyuncs.com/images/image-20240502141955350.png" alt="image-20240502141955350"><p>有时候，我们需要将字符串与数值进行拼接，而 Python不允许直接拼接数值和字符串，程序必须先将数 值转换成字符串。 为了将数值转换成字符串，可以使用str()或 repr()函数，例如如下代码：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="line">name <span class="token operator">=</span> <span class="token string">&quot;张三&quot;</span></span>
<span class="line">site <span class="token operator">=</span> <span class="token string">&quot;法外狂徒网站&quot;</span></span>
<span class="line">tel <span class="token operator">=</span> <span class="token number">6666666666</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;姓名：&quot;</span><span class="token operator">+</span>name<span class="token operator">+</span><span class="token string">&quot;，网站：&quot;</span><span class="token operator">+</span>site<span class="token operator">+</span><span class="token string">&quot;，电话：&quot;</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>tel<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;姓名：&quot;</span><span class="token operator">+</span>name<span class="token operator">+</span><span class="token string">&quot;，网站：&quot;</span><span class="token operator">+</span>site<span class="token operator">+</span><span class="token string">&quot;，电话：&quot;</span><span class="token operator">+</span><span class="token builtin">repr</span><span class="token punctuation">(</span>tel<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用input获取用户输入" tabindex="-1"><a class="header-anchor" href="#使用input获取用户输入"><span>使用input获取用户输入</span></a></h3><p>input()函数用于向用户生成一条提示，然后获取用户输入的内容。由于input()函数总会将用户输入的内 容放入字符串中，因此用户可以输入任何内容，input()函数总是返回一个字符串。我们可以通过int() float()方法来转换类型。</p><p><strong>案例：</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="line">name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入你的名字：&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span><span class="token builtin">type</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">age <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入你的年龄：&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>age<span class="token punctuation">,</span><span class="token builtin">type</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">age <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>age<span class="token punctuation">,</span><span class="token builtin">type</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">height <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入您的身高(cm)：&quot;</span><span class="token punctuation">)</span></span>
<span class="line">height <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>height<span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>执行结果：</strong></p><p><img src="https://bucket-linxc.oss-cn-guangzhou.aliyuncs.com/images/image-20240502142947590.png" alt="image-20240502142947590"></p><h3 id="字符串格式化" tabindex="-1"><a class="header-anchor" href="#字符串格式化"><span>字符串格式化</span></a></h3><p>字符串拼接，如果简单的2,3个字符串拼接那还算好，如果大于3个变量的拼接，就比较麻烦。还有一点，就是字符串无法和和其他类型直接拼接，需要进行类型转换，也麻烦。这时候，Python提供了“%”对各种类型的数据进行格式化输出。</p><p><strong>案例：</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="line">name <span class="token operator">=</span> <span class="token string">&quot;李白&quot;</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;我的姓名是 %s&quot;</span> <span class="token operator">%</span> name<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>执行结果：</strong></p><p><img src="https://bucket-linxc.oss-cn-guangzhou.aliyuncs.com/images/image-20240502143323105.png" alt="image-20240502143323105"></p><p>这里 %s 是占位符，第二个 % 是分隔符，name就是变量了。这个很好理解。</p><p><strong>案例：</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="line">name <span class="token operator">=</span> <span class="token string">&quot;李白&quot;</span></span>
<span class="line">age <span class="token operator">=</span> <span class="token number">18</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;我的姓名是%s,我今年%s岁了&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>执行结果：</strong></p><p><img src="https://bucket-linxc.oss-cn-guangzhou.aliyuncs.com/images/image-20240502143542826.png" alt="image-20240502143542826"></p><p>这里多了一个int类型的age变量。我们输出的时候，用两个%s，中间依然用%间隔，第三块，括号里两个参数。注意参数的顺序不能乱。</p><p>除了%s，还有很多占位符，如下表。我们现在掌握最基础常用的%s，%d，%f，分别把参数或者表达式转换成字符串，整型，浮点型。</p><p><img src="https://bucket-linxc.oss-cn-guangzhou.aliyuncs.com/images/image-20240502143758787.png" alt="image-20240502143758787"></p><p>看下面实例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="line">name <span class="token operator">=</span> <span class="token string">&quot;郭靖&quot;</span></span>
<span class="line">age <span class="token operator">=</span> <span class="token number">18</span></span>
<span class="line">height <span class="token operator">=</span> <span class="token number">181.2</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;我的姓名是 %s,我今年%s岁了&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;我的姓名是 %s,我今年%d岁了&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;我的姓名是 %s,我今年%d岁了,身高%f&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>执行结果：</strong></p><p><img src="https://bucket-linxc.oss-cn-guangzhou.aliyuncs.com/images/image-20240502144137385.png" alt="image-20240502144137385"></p><p>打印身高的时候后面多了好多0，这里涉及到了精度问题。</p>`,28),h=e(`<ul><li><p>m，控制宽度（包括小数点），注意，如果设置的宽度小于数字本身，则不生效。</p></li><li><p>n，控制小数点精度，注意，如果设置的宽度小于小数位数，则进行四舍五入。</p></li></ul><p>我们先把前面的身高，加下小数精度 %.1f 这样输出结果就没有0了。 我们再看一下实例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="line">money1 <span class="token operator">=</span> <span class="token number">99.99</span></span>
<span class="line">money2 <span class="token operator">=</span> <span class="token number">111.66</span></span>
<span class="line">money3 <span class="token operator">=</span> <span class="token number">10000</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;张三钱包余额：%10.2f元&quot;</span> <span class="token operator">%</span> money1<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;李四钱包余额：%10.1f元&quot;</span> <span class="token operator">%</span> money2<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;王五钱包余额：%10.2f元&quot;</span> <span class="token operator">%</span> money3<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>执行结果：</strong></p><p><img src="https://bucket-linxc.oss-cn-guangzhou.aliyuncs.com/images/image-20240502145342117.png" alt="image-20240502145342117"></p><p>其实我们发现上面的字符串格式化方式，虽然功能强大，但是写起来也不是太方便，这边提供一种更加快捷优雅的格式化方式。 <strong>语法是：</strong> f&quot;内容{变量}内容&quot;； 这种方式缺点是无法进行精度控制，以及也不关心类型，原值输出。 <strong>案例：</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="line"><span class="token comment"># 更优雅的输出字符串，但是这种方式无法控制精度，也不考虑类型，原值输出</span></span>
<span class="line">name <span class="token operator">=</span> <span class="token string">&quot;小锋&quot;</span></span>
<span class="line">age <span class="token operator">=</span> <span class="token number">18</span></span>
<span class="line">height <span class="token operator">=</span> <span class="token number">181.2</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;我的姓名是 </span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">,我今年</span><span class="token interpolation"><span class="token punctuation">{</span>age<span class="token punctuation">}</span></span><span class="token string">岁了,身高</span><span class="token interpolation"><span class="token punctuation">{</span>height<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>执行结果：</strong></p><p><img src="https://bucket-linxc.oss-cn-guangzhou.aliyuncs.com/images/image-20240502145808580.png" alt="image-20240502145808580"></p>`,9);function y(q,_){const s=o("font");return i(),c("div",null,[r,a(s,{style:{color:"red"}},{default:p(()=>[n("**小技巧：** ")]),_:1}),n("格式化代码，快捷方式：ctrl+alt+L "),d,k,a(s,{style:{color:"red"}},{default:p(()=>[n("分为单行注释和多行注释。")]),_:1}),m,t("p",null,[n("6种数据类型。"),a(s,{style:{color:"red"}},{default:p(()=>[n("python是弱类型语言，变量的类型是可以改变的。")]),_:1})]),g,t("p",null,[n("python需要用标识符给变量命名。标识符必须以字母或者下划线“_”开头，后面可以跟任意数目的字母、数字和下划线。字母不限于26个英文字母，可以包含中文字符，但是不推荐。"),a(s,{style:{color:"red"}},{default:p(()=>[n("（不能以数字开头、不能是python关键字、不能有空格）")]),_:1})]),v,a(s,{style:{color:"red"}},{default:p(()=>[n("注意：")]),_:1}),n("数字和字符串不能直接拼接"),b,a(s,{style:{color:"red"}},{default:p(()=>[n('我们可以使用辅助符号"m,n"来控制数据的宽度和精度；')]),_:1}),h])}const w=l(u,[["render",y],["__file","2.html.vue"]]),f=JSON.parse('{"path":"/blogs/Python/Pythonyuyanxuexi/2.html","title":"二、变量和简单类型","lang":"en-US","frontmatter":{"title":"二、变量和简单类型","date":"2018/12/27","tags":["Python语言"],"categories":["Python"]},"headers":[{"level":2,"title":"1. 变量","slug":"_1-变量","link":"#_1-变量","children":[]},{"level":2,"title":"2. 注释","slug":"_2-注释","link":"#_2-注释","children":[]},{"level":2,"title":"3. 数据类型","slug":"_3-数据类型","link":"#_3-数据类型","children":[]},{"level":2,"title":"4. 变量的命名规则","slug":"_4-变量的命名规则","link":"#_4-变量的命名规则","children":[]},{"level":2,"title":"5. 运算符","slug":"_5-运算符","link":"#_5-运算符","children":[{"level":3,"title":"赋值运算符","slug":"赋值运算符","link":"#赋值运算符","children":[]},{"level":3,"title":"算术运算符","slug":"算术运算符","link":"#算术运算符","children":[]},{"level":3,"title":"扩展后的赋值运算符","slug":"扩展后的赋值运算符","link":"#扩展后的赋值运算符","children":[]}]},{"level":2,"title":"6. 字符串","slug":"_6-字符串","link":"#_6-字符串","children":[{"level":3,"title":"字符串定义和转义字符","slug":"字符串定义和转义字符","link":"#字符串定义和转义字符","children":[]},{"level":3,"title":"长字符串的定义","slug":"长字符串的定义","link":"#长字符串的定义","children":[]},{"level":3,"title":"字符串拼接","slug":"字符串拼接","link":"#字符串拼接","children":[]},{"level":3,"title":"使用input获取用户输入","slug":"使用input获取用户输入","link":"#使用input获取用户输入","children":[]},{"level":3,"title":"字符串格式化","slug":"字符串格式化","link":"#字符串格式化","children":[]}]}],"git":{"createdTime":1717575230000,"updatedTime":1717575230000,"contributors":[{"name":"会飞的猫","email":"islinxc@163.com","commits":1}]},"filePathRelative":"blogs/Python/Python语言学习/2.md"}');export{w as comp,f as data};
